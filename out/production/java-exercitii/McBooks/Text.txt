Library:                        CRUD
- books                         Create
- pens                          Read
- notebooks                     Update
                                Delete
print books
print pens
print notebooks


Books with id 3
pens with id 2
2 notebooks with id 4

every product has:                                             1. addproduct -> Branch a
- title                                                        2. see product -> Branch b
- uid                                                          3. buy -> c
- price                                                        4. exit
- offer


A:                                              B.
1.add book                                      1. view books.
2. add pens                                     2. view notebooks
3. add notebook                                 3. view pens.
4. return to menu                               4. see total
                                                5. back

C.
1. Add products
2. see total
3. buy
4. back.


Flow de implementare:
1. Trebuie sa scriem clasele Bookstore, Book, Pen, Notebook, BookstoreRunner,texte
2. Pentru Book, Pen si Notebook adaugati fieldurile: title/name, id, price, isOnOffer.
    - Book - title
    - pen - name
    - notebook - name
    title: String
    name: String
    id: int
    price: double; ex:29.99
    isOnOffer : boolean
    offerDiscount: int. ,ex:20
3. In Bookstore vor exista 3 field-uri care sunt Array-uri de book, pen si notebook.


exemple de metode:
ArrayList<Book> books = new ArrayList<>();
books.get(index);
books.add (un book object);
books.remove (index) sau books.remove(un anumit book object);

4. Texts:
MainMenu:
1. Adauga Produse
2. Vzi produse
3. cumparare
4. Iesire

AddProductMenu:                         ListProductMenu:
1 Adauga Carte                          1. Arata Carti
2. Acdauga Caiet                        2. Arata Caiete
3. Adauga Pix                           3. ArataPixuri
4. Adauga pix.                          4.


String text=1".Arata Carti\n 2. Arata caiete" sau
String linie1="a.Arata Carti";
String linie2="2.Arata Caiete";


5. Logica de adugare:
5.A.
In book, pen si notebook trebuie sa avem un constructor. cponstructorul va avea 5 parametri: titlu/nume, id, price, si isOnOffer, offerdiscount;

Pen shiffer=new Pen("Schiffer,5,15,treu,50");
Pen Stabilo = new Pen ("stabillo,3,7,false,0");

5.B.
Bookstore ca si clasa va avea cate o metoda de add pentru fiecare produs
addPen(Pen pen){
pens.add(pen);
}
addBook(Book book);
addnotebook(Notebook notebook);
5.C.
Bookstore trebuie sa i aba metodele de a printa produsele.
printPens();
printBooks();
printNotebooks();

pentur metodele de print trebuie sa folosim enchaned for si sa folositi sout pe obiectul pe care se itereaza.

for(pen i: pens){
...print pe i
}

5.D.
Bookstore acum trebuie sa aibe metodele de a citi o carte noua.
public void readBook(Scanner scanner)
readPen();
readNotebook();

metoda asta trebuie sa primeasca ca parmatreu un scanner, sa puna intrebarile
"care este numele cartii pe care vrei sa o adaigi?"
Scanner.nextline();
 Book temp=new Book(tempname,tempid,etc);

5.E.


6:Navigarea
1. Adauga produse
2. vezi produse
3. cwumparare
4. iesire

Scanner scanner = new Scanner
